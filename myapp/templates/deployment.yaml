apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp.fullname" . }}           # Full name of the deployment (release-name + app name)
  namespace: {{ .Values.namespace }}               # Namespace to deploy the resources into
  labels:
    app: {{ include "myapp.name" . }}              # Application label
    chart: {{ include "myapp.chart" . }}           # Helm chart version
    release: {{ .Release.Name }}                   # Helm release name
    heritage: {{ .Release.Service }}               # Helm service label
    environment: {{ .Values.env | quote }}         # Custom label for environment (e.g., "dev")

spec:
  replicas: {{ .Values.replicaCount }}             # Number of pod replicas to run
  strategy:                                        # Deployment strategy (RollingUpdate for zero-downtime)
    type: RollingUpdate                            # Use rolling updates
    rollingUpdate:
      maxSurge: 25%                                # Allow up to 25% more pods than desired during update
      maxUnavailable: 25%                          # Allow up to 25% of pods to be unavailable during update

  selector:                                        # Label selector to match the pods managed by this deployment
    matchLabels:
      app: {{ include "myapp.name" . }}            # App label
      release: {{ .Release.Name }}                 # Release label

  template:                                        # Pod template
    metadata:
      labels:
        app: {{ include "myapp.name" . }}          # App label for the pods
        release: {{ .Release.Name }}               # Release label for the pods
        environment: {{ .Values.env | quote }}     # Environment label for identifying pods by environment

    spec:
      containers:                                  # Containers inside the pod
        - name: {{ .Chart.Name }}                  # Container name (same as app or chart)
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"  # Image repository and tag
          imagePullPolicy: {{ .Values.image.pullPolicy }}  # Image pull policy (e.g., Always, IfNotPresent)

          ports:
            - containerPort: {{ .Values.service.port }}  # Port the container listens on

          resources:                                  # Resource limits and requests for the container
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}      # Max CPU (e.g., "500m")
              memory: {{ .Values.resources.limits.memory | quote }}  # Max memory (e.g., "256Mi")
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}    # Requested CPU (e.g., "250m")
              memory: {{ .Values.resources.requests.memory | quote }} # Requested memory (e.g., "128Mi")

      volumes:                                      # Volumes available to containers in the pod
        - name: nginx-html                          # Volume name referenced in volumeMounts
          configMap:
            name: {{ include "myapp.fullname" .}}   # Name of ConfigMap, now valid with "-html" suffix

      volumeMounts:                                  # Mount the configMap volume into the container
        - name: nginx-html                           # Volume name to mount
          mountPath: /usr/share/nginx/html            # Path where the content will be mounted in the container
          subPath: index.html                        # Mount the "index.html" file from the ConfigMap
